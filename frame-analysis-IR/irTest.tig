let
        type intArray = array of int
        var a := intArray [10] of 0
in  
    a[11]
end
/*"\097"*/
/*let
function f(a:int, b:int, c:int, d:int, e:int, f:int): int =
         let
         function g():int= b+c
         function h():int= e+f
         in
                a+g()+d+h()
         end
in
        f(0,1,2,3,4,5)
end*/
/*let
  function foo():int = 34
  var a := (if 3<4
      then -345
      else (if 9<7 then 3 else 0=8))
in   
     a
end
*/
/* Ex Ex
if 3<4
then 1
else 0
*/

/*let
  type rec = {a:int, b:string}
  var rec1:rec := nil
in
  rec1.a := 2
end
*/




/*
let
    type tree = {key: string, left: tree, right:tree}

    function prettyprint(tree: tree) : string =
        let
            var output := ""

            function write(s: string) =
                output := concat(output, s)

            function show(n:int, t:tree) =
                let function indent(s:string) =
                        (for i := 1 to n
                            do write(" ");
                        output := concat(output, s); write("\n"))
                in if t=nil then indent(".")
                else (indent(t.key);
                      show(n+1, t.left);
                      show(n+1, t.right))
                end
        in show(0,tree); output
        end
in
    prettyprint(tree {key="abc", left=nil, right=nil})
end
*/
